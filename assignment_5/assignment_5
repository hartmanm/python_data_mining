#!/bin/bash
# for University_of_Illinois 2021
# Michael Neill Hartman

# assignment_5

notes="
In this assignment, you will be implementing two clustering validation measures: Normalized Mutual Information (NMI) and Jaccard similarity.

Input Format

The input of each test case includes n lines. 
Each line i includes two numbers separated by a space. 
The first number is the ground-truth cluster label of the i-th instance, 
and the second number is the predicted cluster label of the i-th instance. 
Sample 0 is an example input of five instances, 
where instance 1 belongs to cluster 2 and is predicted to belong to cluster 3, 
instance 2 belongs to cluster 0 and is predicted to belong to cluster 0...

Output Format

You need to evaluate the clustering predictions with regard to the ground-truth by NMI and Jaccard measures. For each test case, your output is a single line, 
which includes two float numbers (rounded to exactly 3 decimal places) separated by a space . Sample 0 shows the example output of the example input, 
where the first number is NMI and the second number is Jaccard similarity.

You will be graded based on whether your file format is correct and on how many of the measures you submitted are correct.

Sample Input 0

2 3
0 0
0 1
1 1
2 2
Sample Output 0

NMI  Jaccard_similarity
0.656 0.000

number_of_points_in_cluster_0=
number_of_points_in_cluster_1=
number_of_points_in_cluster_2=
number_of_points_in_cluster_3=
total_number_of_points_in_all_clusters=

H(C):
# Entropy of clustering
number_of_points_in_cluster=
total_number_of_points=
for each cluster: 
-sum_of_T1 * log(sum_of_T1)
PROBABILITY_OF_CLUSTER=$(echo "$number_of_points_in_cluster/$total_number_of_points_in_all_clusters" | bc)

H(T):
# Entropy of partitioning
number_of_points_in_cluster=
total_of_truths=
PROBABILITY_OF_GROUND_TRUTH=$(echo "$number_of_points_in_cluster/$total_of_truths" | bc)


H(C,T) - H(C)


between 0 and 1
NMI
log(



)

"

GTC=""
PC=""
ground_truth_0=0
ground_truth_1=0
ground_truth_2=0
ground_truth_3=0
total_of_truths=0
number_of_points_in_cluster_0=0
number_of_points_in_cluster_1=0
number_of_points_in_cluster_2=0
number_of_points_in_cluster_3=0
total_number_of_points_in_all_clusters=0
poc0=0
poc1=0
poc2=0
poc3=0

while read -r LINE; 
do
THIS_GTC=`echo $LINE | awk '{print $1}'`
THIS_GTC=$(($THIS_GTC))
THIS_PC=`echo $LINE | awk '{print $2}'`
THIS_PC=$(($THIS_PC))
GTC="${GTC} ${THIS_GTC}" 
PC="${PC} ${THIS_PC}" 
echo "
THIS_GTC: $THIS_GTC
THIS_PC:  $THIS_PC
"
#total_number_of_points_in_all_clusters=$(($total_number_of_points_in_all_clusters+`echo $LINE | awk '{print $1}'`))
[[ $THIS_PC -eq 0 ]] && number_of_points_in_cluster_0=$(($THIS_GTC + $number_of_points_in_cluster_0))
[[ $THIS_PC -eq 1 ]] && number_of_points_in_cluster_1=$(($THIS_GTC + $number_of_points_in_cluster_1))
[[ $THIS_PC -eq 2 ]] && number_of_points_in_cluster_2=$(($THIS_GTC + $number_of_points_in_cluster_2))
[[ $THIS_PC -eq 3 ]] && number_of_points_in_cluster_3=$(($THIS_GTC + $number_of_points_in_cluster_3))
done ## while read -r LINE; 
total_number_of_points_in_all_clusters=$(($number_of_points_in_cluster_3+$number_of_points_in_cluster_2+$number_of_points_in_cluster_1+$number_of_points_in_cluster_0))

poc0=$(echo "scale=10; $number_of_points_in_cluster_0 / $total_number_of_points_in_all_clusters" | bc)
poc1=$(echo "scale=10; $number_of_points_in_cluster_1 / $total_number_of_points_in_all_clusters" | bc)
poc2=$(echo "scale=10; $number_of_points_in_cluster_2 / $total_number_of_points_in_all_clusters" | bc)
poc3=$(echo "scale=10; $number_of_points_in_cluster_3 / $total_number_of_points_in_all_clusters" | bc)

ground_truth_0=$(echo "scale=10; ($number_of_points_in_cluster_0 * $total_number_of_points_in_all_clusters) / 100" | bc)
ground_truth_1=$(echo "scale=10; ($number_of_points_in_cluster_1 * $total_number_of_points_in_all_clusters) / 100" | bc)
ground_truth_2=$(echo "scale=10; ($number_of_points_in_cluster_2 * $total_number_of_points_in_all_clusters) / 100" | bc)
ground_truth_3=$(echo "scale=10; ($number_of_points_in_cluster_3 * $total_number_of_points_in_all_clusters) / 100" | bc)

T0=`echo $GTC | awk '{print $1}'`
T0=$(($T0))
T1=`echo $GTC | awk '{print $2}'`
T1=$(($T1))
T2=`echo $GTC | awk '{print $3}'`
T2=$(($T2))
T3=`echo $GTC | awk '{print $4}'`
T3=$(($T3))

I0=0
I1=0
I2=0
I3=0
I_TOTAL=0

#TT=" $T1 * (l($T1 / ($poc1 * $T1) ) / l(10)) | bc -l)"
[[ ${ground_truth_0} != "0" && ${poc0} != "0" && ${T0} != "0" ]] && I0=$(echo "scale=10; $T0 * (l($T0 / ($poc0 * $T0) ) / l(10))" | bc -l)
[[ ${ground_truth_1} != "0" && ${poc1} != "0" && ${T1} != "0" ]] && I0=$(echo "scale=10; $T1 * (l($T1 / ($poc1 * $T1) ) / l(10))" | bc -l)
[[ ${ground_truth_2} != "0" && ${poc2} != "0" && ${T2} != "0" ]] && I0=$(echo "scale=10; $T2 * (l($T2 / ($poc2 * $T2) ) / l(10))" | bc -l)
[[ ${ground_truth_3} != "0" && ${poc3} != "0" && ${T3} != "0" ]] && I0=$(echo "scale=10; $T3 * (l($T3 / ($poc3 * $T3) ) / l(10))" | bc -l)
I_TOTAL=$(echo "scale=10; $I0 + $I1 + $I2 + $I3" | bc)

#I=$(echo "scale=3; -1 * $T0 * (l($T0 / ($poc0 * $T0) ) / l(10)) - $T1 * (l($T1) / l(10)) - $T2 * (l($T2) / l(10)) - $T3 * (l($T3) / l(10))" | bc -l)  

H_C=$(echo "scale=10; -1 * $poc0 * (l($poc0) / l(10)) - $poc1 * (l($poc1) / l(10)) - $poc2 * (l($poc2) / l(10)) - $poc3 * (l($poc3) / l(10))" | bc -l)  

H_T=$(echo "scale=10; -1 * $T0 * (l($T0) / l(10)) - $T1 * (l($T1) / l(10)) - $T2 * (l($T2) / l(10)) - $T3 * (l($T3) / l(10))" | bc -l)  
H_T=$(echo ${H_T/-/})

THE_INPUT=$(echo "scale=10; $H_C * $H_T" | bc)
DENOM=$(awk -v x=$THE_INPUT 'BEGIN{print sqrt(x)}')
#DENOM=$THE_INPUT

RESULT=$(echo "scale=3; $I_TOTAL / $DENOM" | bc)
#H_C=$(echo "scale=3; (l(0.4) / l()10)" | bc -l)  

echo "
${GTC}
${PC} 

$number_of_points_in_cluster_0
$number_of_points_in_cluster_1
$number_of_points_in_cluster_2
$number_of_points_in_cluster_3

$total_number_of_points_in_all_clusters

$poc0
$poc1
$poc2
$poc3

$ground_truth_0
$ground_truth_1
$ground_truth_2
$ground_truth_3

$H_C

$H_T

$DENOM

$I0
$I1
$I2
$I3

$I_TOTAL

$RESULT
"

#echo ${PC}





