#!/bin/bash
# for University_of_Illinois 2021
# Michael Neill Hartman

INPUT_FILE=places.txt
# format
#longitude,latitude

OUTPUT_FILE=clusters.txt
#format
#location_id cluster_label

# Implementing K-means Clustering Algorithm

LONGS="-112 -80 -80"
LATS="33 43 35"

echo "
$LONGS

$LATS
"

RESULT=
LAT1=
LAT2=
LONG1=
LONG2=

Euclidean(){
THE_LAT=$(echo "$LAT1 - $LAT2" | bc)
THE_LAT=$(echo "$THE_LAT * $THE_LAT" | bc)
THE_LONG=$(echo "$LONG1 - $LONG2" | bc)
THE_LONG=$(echo "$THE_LONG * $THE_LONG" | bc)
THE_INPUT=$(echo "$THE_LAT + $THE_LONG" | bc)
RESULT=$(awk -v x=$THE_INPUT 'BEGIN{print sqrt(x)}')
}

> ${OUTPUT_FILE}
CENTROID=
LOWEST=
ITERATOR=1

SOURCE_LONGS=$(cat $INPUT_FILE | tr ',' ' ' | awk '{print $1}')
SOURCE_LATS=$(cat $INPUT_FILE | tr ',' ' ' | awk '{print $2}')

LAT_ITERATOR=$(wc -l $INPUT_FILE | awk '{print $1}')
LAT_ITERATOR=$(($LAT_ITERATOR*1))
while [[ $ITERATOR -lt $LAT_ITERATOR+2 ]]
do
ITEM_LONGS=$(echo $SOURCE_LONGS | tr ' ' '\n' | head -$ITERATOR | tail -1 | tr '\n' ' ')
ITEM_LATS=$(echo $SOURCE_LATS | tr ' ' '\n' | head -$ITERATOR | tail -1 | tr '\n' ' ')


CLOSEST1_LONG=$(echo $LONGS | awk '{print $1}')
CLOSEST1_LAT=$(echo $LATS | awk '{print $1}')
RESULT=
RESULT1=
RESULT2=
RESULT3=
LAT1=$ITEM_LATS
LAT2=$CLOSEST1_LAT
LONG1=$ITEM_LONGS
LONG2=$CLOSEST1_LONG
Euclidean
RESULT1=`echo $RESULT  | tr '.' ' ' | awk '{print $1}'`
RESULT1=$(echo "$RESULT1 +1" | bc)
RESULT1D=`echo $RESULT | tr '.' ' ' | awk '{print $2}'`
RESULT1D=$(echo "$RESULT1D * 1" | bc)


CLOSEST1_LONG=$(echo $LONGS | awk '{print $2}')
CLOSEST1_LAT=$(echo $LATS | awk '{print $2}')
RESULT=
LAT1=$ITEM_LATS
LAT2=$CLOSEST1_LAT
LONG1=$ITEM_LONGS
LONG2=$CLOSEST1_LONG
Euclidean
RESULT2=`echo $RESULT  | tr '.' ' ' | awk '{print $1}'`
RESULT2=$(echo "$RESULT2 +1" | bc)
RESULT2D=`echo $RESULT | tr '.' ' ' | awk '{print $2}'`
RESULT2D=$(echo "$RESULT2D * 1" | bc)


CLOSEST1_LONG=$(echo $LONGS | awk '{print $3}')
CLOSEST1_LAT=$(echo $LATS | awk '{print $3}')
RESULT=
LAT1=$ITEM_LATS
LAT2=$CLOSEST1_LAT
LONG1=$ITEM_LONGS
LONG2=$CLOSEST1_LONG
Euclidean
RESULT3=`echo $RESULT  | tr '.' ' ' | awk '{print $1}'`
RESULT3=$(echo "$RESULT3 +1" | bc)
RESULT3D=`echo $RESULT | tr '.' ' ' | awk '{print $2}'`
RESULT3D=$(echo "$RESULT3D * 1" | bc)


LOWEST=$RESULT1

[[ $RESULT2 -lt $RESULT1 ]] && LOWEST=$RESULT2
[[ $RESULT2 -eq $RESULT1 ]] && {
[[ $RESULT2D -lt $RESULT1D ]] && LOWEST=$RESULT2
} ## [[ $RESULT2 -eq $RESULT1 ]] && {

[[ $RESULT3 -lt $RESULT2 ]] && LOWEST=$RESULT3
[[ $RESULT3 -eq $RESULT2 ]] && {
[[ $RESULT3D -lt $RESULT2D ]] && LOWEST=$RESULT3
} ## [[ $RESULT3 -eq $RESULT2 ]] && {

[[ $RESULT1 -lt $RESULT3 ]] && LOWEST=$RESULT1
[[ $RESULT1 -eq $RESULT3 ]] && {
[[ $RESULT1D -lt $RESULT3D ]] && LOWEST=$RESULT1
} ## [[ $RESULT1 -eq $RESULT3 ]] && {

[[ $RESULT1 =~ $LOWEST ]] && CENTROID=0
[[ $RESULT2 =~ $LOWEST ]] && CENTROID=1
[[ $RESULT3 =~ $LOWEST ]] && CENTROID=2

echo "
$RESULT1.$RESULT1D
$RESULT2.$RESULT2D
$RESULT3.$RESULT3D

$CENTROID
"

OUT=$(($ITERATOR-1))
echo "${OUT} ${CENTROID}" >> ${OUTPUT_FILE}

ITERATOR=$(($ITERATOR+1))
done ## while [[ $ITERATOR -lt $LAT_ITERATOR+1 ]]

echo "complete!"
