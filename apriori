#!/bin/bash
# for University_of_Illinois 2021
# Michael Neill Hartman

# store the number of lines in dataset
NUMBER_OF_LINES=$(wc -l dataset | awk '{print $1}')
NUMBER_OF_LINES=$(($NUMBER_OF_LINES))

# generate a modified_dataset with space IFS from dataset
cat dataset | tr ' ' '_' | tr ';' ' ' > modified_dataset

cat modified_dataset | tr ' ' '\n' > token_per_line



# make a result file
> result

# make a result LIST
RESULT=""

ITERATOR=1
while [[ $ITERATOR -lt $NUMBER_OF_LINES+1 ]]
do
LINE=$(head -$ITERATOR token_per_line | tail -1)
for TOKEN in ${LINE}
do
THIS=$(grep -v "_${TOKEN}" | grep "${TOKEN}" token_per_line | wc -l | awk '{print $1}')
##sed -i 's/${THIS}//g' token_per_line
[[ `echo ${RESULT} | grep " ${THIS}"` == "" ]] && {
GREATER_THAN_771=$((`echo ${THIS} | tr ':' ' ' | awk '{print $1}'`))
[[ $GREATER_THAN_771 -gt 771 ]] && RESULT="${RESULT}!`echo ${THIS}`:`echo ${TOKEN} | tr '_' ' ' `"
} ## [[ `echo ${RESULT} | grep " ${THIS}"` == "" ]] && {
done ## for TOKEN in ${LINE}
[[ $(($ITERATOR % 100)) -eq 0 ]] && {
echo "$ITERATOR/$NUMBER_OF_LINES"
echo ${RESULT}
} ## [[ $(($ITERATOR % 1000)) -eq 0 ]] && {
ITERATOR=$(($ITERATOR+1))
done ## while [[ $ITERATOR -lt $NUMBER_OF_LINES+1 ]]


# translate list to file
echo ${RESULT} | tr '!' '\n' > result

# sort in numerical order then remove duplicates
sort -n result | uniq > final_result

final_result > patterns.txt 

# remove all blank lines
#perl -i -n -e "print if /\S/" final_result

# remove all support < 771
#NUMBER_OF_LINES=$(wc -l final_result | awk '{print $1}')
#NUMBER_OF_LINES=$(($NUMBER_OF_LINES))
#FROM_BOTTOM=$(($NUMBER_OF_LINES-771))
#tail -$FROM_BOTTOM final_result > patterns.txt 

# remove all blank lines
#perl -i -n -e "print if /\S/" patterns.txt 

# store submission file
[[ -d part_1 ]] || mkdir -p part_1
mv patterns.txt part_1



# run with:  time bash apriori | tee log

# 92m17.769s
# 178m48.168s

echo "
complete; result in: patterns.txt
"
